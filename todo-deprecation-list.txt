



TO REMOVE:




org.apache.isis.applib


    DomainObjectContainer.java  - entire class





org.apache.isis.applib.clock
    Clock


org.apache.isis.applib.services.audit  (2 usages found)
    AuditingService3.java - remove entire service, use AuditerService instead

org.apache.isis.applib.services.bookmark  (8 usages found)
    BookmarkService.java - deprecated methods, have overloads in BookmarkService2 subtype [suggest we retain these for now]
org.apache.isis.applib.services.classdiscovery 
    ClassDiscoveryService.java , push down into ClassDiscoveryService2


org.apache.isis.applib.services.memento  (19 usages found)
    MementoService.java - remove entire service (previously to support view models, but now @ViewModel and JAXB)

org.apache.isis.applib.services.metamodel
    MetaModelService2.java - push down to subtype, retain overloads for now




org.apache.isis.core.objectstore.jdo.applib.annotations - remove package entirely
    Auditable.java - use @DomainObject(audited=...) instead.
org.apache.isis.objectstore.jdo.applib
    Auditable.java - use @DomainObject(audited=...) instead.
org.apache.isis.objectstore.jdo.applib.service
    DomainChangeJdoAbstract.java - move to incode platform
    JdoColumnLength.java - remove class (all constants defined in other classes)
                         - https://github.com/apache/isis/blob/rel/isis-1.15.1/core/applib/src/main/java/org/apache/isis/objectstore/jdo/applib/service/JdoColumnLength.java
    Util.java - remove
org.apache.isis.objectstore.jdo.applib.service.support
    IsisJdoSupport.java - replaced by org.apache.isis.applib.services.jdosupport.IsisJdoSupport




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



Notes:

sometimes there are multiple versions of a type, eg BookmarkService2 and BookmarkService, where BookmarkService2 extends BookmarkService.  In these cases, suggest pull up the methods from the subtype(s) into the supertype, and then delete those subtypes... ie we end up with a new expanded version of BookmarkService.


Also propose:
    make AppManifest mandatory

    remove support for contributed services (use mixins instead)

    remove support for "notInServiceMenu" prefix


Also for 2.0.0, new features/deprecations:
    automatically wrap domain services (perhaps behind a config property)
    automatically infer \@Programmatic for all \@DomainService(nature=DOMAIN)
    deprecate use of guava predicates, but don't remove (too big a change, weren't deprecated previously)
    deprecate FixtureScripts service with view to removing from applib ... the framework provides an implementation by default
    get rid of automatic initialization of fields (perhaps behind a config property)
    deprecate the Apache Isis' DateTime classes for removal in the future) ... and probably all of the custom value types, subclasses of Magnitude



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


OTHER STUFF:


remove explorationXxx() prefix
remove prototypeXxx() prefix
remove debugXxx() prefix


debug() stuff

DebugDataInputExtended & DebugDataOutputExtended  .... seem to be unused


ObjectFixtureService



inline paraname8 from incode platform

remove named static method
remove plural static method



PublishingServiceInternalDefault

not thread-safe:

    boolean suppress;

    @Programmatic
    @Override
    public <T> T withPublishingSuppressed(final Block<T> block) {
        try {
            suppress = true;
            return block.exec();
        } finally {
            suppress = false;
        }
    }


? deprecate When enum ?

    
~~~

combine isis-core-wicket-applib with isis-core-applib


update .xsd for layout, make render optional and deprecated.    




link:https://issues.apache.org/jira/browse/ISIS-743[ISIS-743] - @NotPersistable annotation




*************************************************************************

PROPOSE TO RETAIN:


Below is the code currently deprecated in the applib, but I propose to retain even in 2.0.0 (on the grounds that a replacement for them is not fully designed):
org.apache.isis.applib.adapters  - custom value type support


org.apache.isis.applib.annotation

    Encodable.java - entire annotation, part of custom value types support
    Parseable.java - entire annotation, part of custom value types support


org.apache.isis.applib.fixtures  - "legacy" fixture support package ... by and large can use FixtureScripts (though not sure if there's feature parity in all cases)
    AbstractFixture.java
    AbstractFixtureSusa.java
    BaseFixture.java
    CompositeFixture.java
    DateFixture.java
    LogonFixture.java
org.apache.isis.applib.fixtures.switchuser
    SwitchUserService.java
    SwitchUserServiceAware.java

org.apache.isis.applib.services.command
    Command.java  - methods that pertain to the execution of the command and its completion (for that, use Interaction) [suggest we retain for now]
        getCompletedAt()
        getException()
        getResult()
        getStartedAt()
        next(String)
        setCompletedAt(Timestamp)
        setStartedAt(Timestamp)
    Command3.java  - metods for working with domain events (equiv functionality in Interaction)  [suggest we retain for now]
        flushActionDomainEvents()
        peekActionDomainEvent()
        popActionDomainEvent()
        pushActionDomainEvent(ActionDomainEvent<?>)  (

    MemberGroupLayout.java - entire annotation, use Xxx.layout.xml instead




*************************************************************************

DONE (ADDED)

    new support for JSR-303 @Pattern annotation (http://beanvalidation.org/1.0/spec/, chapter 6) ... replaces @RegEx


DONE (MOVED)

    org.apache.isis.applib.events        - moved to services.wrapper.events.  (Still useful as provide context for exceptions, for a "transcript" framework).
    org.apache.isis.applib.events.system - move to fixturescripts.events.
    org.apache.isis.applib.conmap.ContentMappingService to applib.services.conmap



DONE (REMOVED):

    removed support for Xxx.layout.json
    - "reflector.layoutMetadataReaders" config prop



org.apache.isis.applib

    AbstractContainedObject.java - entire class
    AbstractDomainObject.java  - entire class
    AbstractFactoryAndRepository.java  - entire class

    AbstractHomePageDashboardService - entire class



    IsisApplibModule.java
        ActionDomainEvent - the N-arg constructors (just use the 0-arg ones)
        CollectionDomainEvent - the N arg constructors (just use the 0-arg ones)
        PropertyDomainEvent  - the N arg constructors (just use the 0-arg ones)



org.apache.isis.applib.annotation

    ActionInteraction.java  - entire annotation, use @Action(domainEvent=...)
    CollectionInteraction.java - entire annotation, use @Collection(domainEvent=...)
    PostsActionInvokedEvent.java - entire annotation, use @Action(domainEvent=...) instead
    PostsCollectionAddedToEvent.java - entire annotation, use @Collection(domainEvent=...) instead.
    PostsCollectionRemovedFromEvent.java - entire annotation, use @Collection(domainEvent=...) instead.
    PostsPropertyChangedEvent.java - entire annotation, use @Property(domainEvent=...) instead.
    PropertyInteraction.java - entire annotation, use @Property(domainEvent=...) instead.

    Action.java
        publishingPayloadFactory()  - attribute; use the simpler PublisherService SPI instead
    DomainObject.java
        publishingPayloadFactory() - attribute, use the simpler PublisherService SPI instead
    PublishedAction.java - entire annotation, use @Action(publishing=...) instead
    PublishedObject.java - entire annotation, use @DomainObject(publishing=...) instead
    PublishingPayloadFactoryForAction.java - entire annotation, replaced with simpler PublisherService SPI
    PublishingPayloadFactoryForObject.java - entire annotation, replaced with simpler PublisherService SPI


    AutoComplete.java - entire annotation, use @DomainObject(autoComplete...=...)

    Bookmarkable.java - entire annotation, use @DomainObjectLayout(bookmarking=...)

    Bulk.java - entire annotation, use @Action(invokeOn=...)
    Bulk.InteractionContext - entire service, use ActionInvocationContext service instead

    Command.java - entire annotation, use @Action(command=...) instead

    Disabled.java - entire annotation, use @Property(editingDisabledReason=...) instead
    Hidden.java - entire annotation, use @Property(hidden=...), @Collection(hidden=...), @Action(hidden=...)

    ActionSemantics.java  - entire annotation, use @Action(semantics=...)
    Idempotent.java - entire annotation, use @Action(semantics=...) instead.
    QueryOnly.java - entire annotation, use @Action(semantics=...) instead.

    ActionOrder.java - entire annotation, use @MemberOrder instead
    FieldOrder.java - entire annotation, use @MemberOrder instead

    Aggregated.java - entire annotation, not supported internally

    Audited.java - entire annotation, use @DomainObject(audited=...)

    Bounded.java - entire annotation, use @DomainObject(bounded=...)

    CollectionLayout.java
        render() - use @CollectionLayout(defaultView=...) instead
    RenderType.java - supporting enum for @Render annotation
    Render.java - entire annotation, use @CollectionLayout(defaultView=...) instead
    Resolve.java - entire annotation, use @CollectionLayout(defaultView=...) instead

    CssClass.java - entire annotation, use @XxxLayout(cssClass=...) instead, where Xxx is Property, Collection, Action, Parameter, DomainObject, ViewModel
    CssClassFa.java - entire annotation, use @XxxLayout(cssClass=...) instead, where Xxx is Property, Collection, Action, Parameter, DomainObject, ViewModel

    Debug.java - entire annotation, use @Action#(restrictTo=...) instead
    Exploration.java - entire annotation, use @Action(restrictTo=....) instead
    Prototype.java  - entire annotation, use @Action(restrictTo=....) instead

    DescribedAs.java - entire annotation, use @XxxLayout(describedAs=...) instead

    Ignore.java - entire annotation, use @Programmatic instead.

    Immutable.java - entire annotation, use @DomainObject(editing=...) instead

    Mask.java - entire annotation, not supported by either Wicket viewer or RO viewer
    MaxLength.java - entire annotation, use @Property(maxLength=...) and @Parameter(maxLength=...)
    MultiLine.java - entire annotation, use @PropertyLayout(multiLine=...) and @ParameterLayout(multiLine=...) instead.
    Named.java - entire annotation, use @XxxLayout(named=...) instead, where Xxx is Property, Collection, Action, Parameter, DomainObject, ViewModel
    Plural.java - entire annotation, use @DomainObjectLayout(plural=...) instead

    MemberGroups.java - entire annotation, use Xxx.layout.xml instead

    MustSatisfy.java - entire annotation, use @Property(mustSatisfy=....) or @Parameter(mustSatisfy=...) instead

    RegEx.java - entire annotation, use @Property(regexPatternFlags=...) or @Parameter(regexPatternFlags=...) instead;


    RenderedAsDayBefore.java - entire annotation, use @PropertyLayout(renderedAsDayBefore=...) and @ParameterLayout(renderedAsDayBefore=...)

    Paged.java - entire annotation, use @DomainObjectLayout(paged=...) or @CollectionLayout(paged=...) instead.
    SortedBy.java - entire annotation, use @CollectionLayout(sortedBy=...) instead

    TypicalLength.java - entire annotation, use @PropertyLayout(typicalLength=...) instead.


    TypeOf.java - entire annotation, use @Collection(typeOf=...) or @Action(typeOf=...) instead.


    Mandatory.java - entire annotation, use @Property(optionality=...) and @Parameter(optionality=...), or @javax.annotations.Nullable
    Optional.java - entire annotation, use @Property(optionality=...) and @Parameter(optionality=...), or @javax.annotations.Nullable


    NotInServiceMenu.java - entire annotation, use @DomainService(nature=...) or mixins instead.

    NotContributed.java - entire annotation, use @DomainService(nature=...) or mixins instead.

    NotPersisted.java - entire annotation, use @Property(notPersisted=...) instead

    NotPersistable.java - entire annotation, not supported and does nothing

    Parameter.java
        minLength() attribute; not supported.  For autocomplete, use @MinLength annotation.

    ObjectType.java - entire annotation, use @DomainObject(objectType=...) or @javax.jdo.annotations.Discriminator instead.

    When.java - entire enum, no replacement (believe is unused within the framwork)



org.apache.isis.applib.marker - remove these marker interfaces (tend to use annotations in preference)

    Auditable.java
    Bounded.java

    NotPersistable.java
    ProgramPersistable.java

    AlwaysImmutable.java
    ImmutableOncePersisted.java
    ImmutableUntilPersisted.java
    NeverImmutable.java





org.apache.isis.applib.filter

    - entire package of Filter classes; use guava Predicate instead.


org.apache.isis.applib.clock
    Clock.java -
        getTimeAsCalendar()
        getTimeAsDate()

org.apache.isis.applib.fixturescripts
    FixtureScript.ExecutionContext - various methods to simplify API
        add(...) - use addResult(...) instead
        asKeyValueMap(String) - removed; this shouldn't have had public visibility.

    FixtureScript - various methods to simplify API
        execute(...) and executeChild(...) - use ExecutionContext#executeChild(FixtureScript, String, FixtureScript)} instead
        executeIfNotAlready(FixtureScript) - removed; this shouldn't have had public visibility.
        lookup(String, Class<T>) - use ExecutionContext#lookup(...) instead
        run(String) - no longer publically available (internal API for FixtureScripts to call).

    FixtureScripts.java - remove deprecated constructors;

    FixtureScripts.MultipleExecutionStrategy#IGNORE removed, replaced by EXECUTE_ONCE_BY_CLASS


org.apache.isis.applib.services.actinvoc
    ActionInvocationContext.java -remove unused constructors


org.apache.isis.applib.services.background  (10 usages found)
    ActionInvocationMemento.java - remove entire class, use InteractionDto and CommandDto are used internally instead
    BackgroundCommandService.java - remove methods using AIM, instead keep those using CommandDto (in BackgroundCommandService2)
    BackgroundService.java
        asActionInvocationMemento(Method, Object, Object[]) - remove this internal API, no longer called by framework

    Remove support for legacy persisted commands (beginning "<memento>...")

org.apache.isis.applib.services.command.spi
    CommandService.java
        startTransaction(Command, UUID) - no longer required to do anything, so remove




org.apache.isis.applib.services.command
    Command2.java  - methods for working with interaction events (remove with those event types)
        flushActionInteractionEvents()
        peekActionInteractionEvent()
        popActionInteractionEvent()
        pushActionInteractionEvent(ActionInteractionEvent<?>)


org.apache.isis.applib.services.eventbus
    AbstractInteractionEvent.java - remove
    ActionInteractionEvent.java - remove
    ActionInvokedEvent.java - remove
    CollectionAddedToEvent.java - remove
    CollectionInteractionEvent.java - remove
    CollectionRemovedFromEvent.java  - remove
    PropertyChangedEvent.java - remove
    PropertyInteractionEvent.java - remove




org.apache.isis.viewer.restfulobjects.rendering.service.conmap.ContentMappingService
    - replaced by non-applib

org.apache.isis.viewer.restfulobjects.rendering.service.RepresentationServiceForRestfulObjects
    - unused

org.apache.isis.applib.services.publish - remove classes pertaining to original PublishingService (payload factories etc).
    EventMetadata.java - remove class
    EventType.java - remove class
    EventPayload.java - remove class
    EventPayloadForActionInvocation.java - remove class
    EventPayloadForObjectChanged.java - remove class

    PublishedEventStateType.java - remove class
    PublishingService.java - remove domain service interface
    StatusMessageMessageType.java - remove class

org.apache.isis.applib.services.settings
    SettingTypes.java - remove, used only by 3rd party code (incode platform settings module)

org.apache.isis.applib.services.wrapper
    WrapperObject.java
        save() and wrapped() - remove to avoid name clashes, use __isis_Xxx() methods instead


org.apache.isis.applib.snapshot
    Snapshottable.java - remove, since unused


org.apache.isis.applib.value
    DateTime.java
        longValue() - use #millisSinceEpoch()
    Time.java
        longValue() - use #millisSinceEpoch()


org.apache.isis.applib

    DomainObjectContainer.java
    - titleOf       ... use TitleService#titleOf(...) instead
    - iconNameOf    ... use TitleService#iconNameOf(...) instead
    - flush()       ... use TransactionService#flushTransaction instead

