<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor
	license agreements. See the NOTICE file distributed with this work for additional
	information regarding copyright ownership. The ASF licenses this file to
	you under the Apache License, Version 2.0 (the "License"); you may not use
	this file except in compliance with the License. You may obtain a copy of
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required
	by applicable law or agreed to in writing, software distributed under the
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
	OF ANY KIND, either express or implied. See the License for the specific
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.apache.isis</groupId>
		<artifactId>isis-parent</artifactId>
		<version>2.0.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<groupId>org.apache.isis.core</groupId>
	<artifactId>isis-core</artifactId>

	<packaging>pom</packaging>

	<name>Apache Isis Core</name>
	<url>https://isis.apache.org</url>
	<description>
        Core framework, providing metamodel, runtime and core APIs.
    </description>

	<properties>
		<isis.skipTests>false</isis.skipTests>
		<maven.test.skip>${isis.skipTests}</maven.test.skip>

		<coreBaseDir>${project.build.directory}/..</coreBaseDir>

		<jar-plugin.automaticModuleName>org.apache.isis.core</jar-plugin.automaticModuleName>
		<git-plugin.propertiesDir>org/apache/isis/core</git-plugin.propertiesDir>
		<git-plugin.gitDir>${coreBaseDir}/../.git</git-plugin.gitDir>

		<dependency.locations.enabled>false</dependency.locations.enabled>

		<checkstyle.configLocation>${coreBaseDir}/codequality/checkstyle.xml</checkstyle.configLocation>
		<pmd.ruleset>${coreBaseDir}/codequality/pmd.xml</pmd.ruleset>
	</properties>

	<build>
		<outputDirectory>${project.build.directory}/classes</outputDirectory>
		<testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>

		<extensions>
			<!-- scp and sftp support for deployments. -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>3.4.3</version>
			</extension>
			<!-- ftp support for deployments. -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>3.4.3</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.archetype</groupId>
				<artifactId>archetype-packaging</artifactId>
				<version>3.2.0</version>
			</extension>
		</extensions>

		<pluginManagement>
			<plugins>

				<!-- IDE support for Eclipse (if not using m2e). (NetBeans 6.7+ and IDEA
					7.0+ also have built-in support -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven-eclipse-plugin.version}</version>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
						<projectNameTemplate>[groupId].[artifactId]</projectNameTemplate>
					</configuration>
					<!-- use mvn eclipse:eclipse (no goals bound to phases) -->
				</plugin>

				<!-- Compile -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<showDeprecation>false</showDeprecation>
						<showWarnings>false</showWarnings>
						<!-- Java compliance level, to be overridden with option maven.compiler.release -->
					</configuration>
					<!-- goal:compile binds to phase:compile -->
					<!-- goal:testCompile binds to phase:test-compile -->
				</plugin>

				<!-- Tests (ignore integration tests) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- override defaults and include everything unless explicitly excluded -->
						<includes>
							<include>**/*.java</include>
						</includes>
						<excludes>
							<exclude>${testsToExclude}</exclude>
						</excludes>
						<printSummary>false</printSummary>
						<argLine>@{argLine} ${surefire-plugin.argLine}</argLine>
					</configuration>
					<!-- goal:test binds to phase:test -->
				</plugin>

				<!-- Test Reporting -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<!-- goal:report is a report so is configured in the reporting section;
						invokes phase:test before running itself -->
				</plugin>


				<!-- Artifacts derived from code: javadoc; supports both build and report
					goals; not included as a build plugin except through profiles (to speed up
					the build) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<inherited>true</inherited>
					<configuration>
						<!-- as per http://stackoverflow.com/a/16743137/56880; only if using
							java 8 to build -->
						<!-- <additionalparam>-Xdoclint:none</additionalparam> -->
						<debug>true</debug>
						<minmemory>128m</minmemory>
						<maxmemory>1024m</maxmemory>
						<quiet>true</quiet>
						<doctitle>${project.name} ${project.version}</doctitle>
						<windowtitle>${project.name} ${project.version}</windowtitle>
						<testDoctitle>${project.name} ${project.version}
							(TEST API)
						</testDoctitle>
						<testWindowtitle>${project.name}
							${project.version} (TEST API)
						</testWindowtitle>
						<splitindex>true</splitindex>
						<encoding>${project.build.sourceEncoding}</encoding>
						<links>
							<link>https://docs.oracle.com/en/java/javase/11/docs/api/</link>
						</links>
						<linksource>true</linksource>
						<!-- http://jira.codehaus.org/browse/MJAVADOC-268 and http://jira.codehaus.org/browse/MJAVADOC-284 -->
						<detectOfflineLinks>false</detectOfflineLinks>
					</configuration>
					<!-- goal:aggregate (for aggregator modules) has no binding; explicitly
						bound in profiles -->
					<!-- goal:jar (for non-aggregator modules) binds to phase:package -->
					<!-- goal:test-jar (for non-aggregator modules) binds to phase:package -->
					<!-- goal:javadoc is a report so is configured in the reporting section -->
				</plugin>

				<!-- Packaging: source jars of main and test code -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<configuration>
						<includePom>true</includePom>
					</configuration>
					<!-- goal:aggregate (for aggregator modules) binds to phase:package -->
					<!-- goal:jar and goal:test-jar are meant to bind to phase:package,
						but doesn't seem to so bound explicitly -->
					<executions>
						<execution>
							<id>package-jars</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>


				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>${git-commit-id-plugin.version}</version>
					<executions>
						<execution>
							<id>get-the-git-infos</id>
							<goals>
								<goal>revision</goal>
							</goals>
							<phase>validate</phase>
						</execution>
					</executions>
					<configuration>
						<verbose>false</verbose>
						<useNativeGit>true</useNativeGit>
						<dotGitDirectory>${git-plugin.gitDir}</dotGitDirectory>

						<dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
						<dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>

						<failOnNoGitDirectory>true</failOnNoGitDirectory>
						<injectAllReactorProjects>true</injectAllReactorProjects>

						<generateGitPropertiesFile>true</generateGitPropertiesFile>
						<generateGitPropertiesFilename>${project.build.outputDirectory}/${git-plugin.propertiesDir}/git.properties</generateGitPropertiesFilename>

						<abbrevLength>7</abbrevLength>
					</configuration>

				</plugin>


				<!-- Packaging: jar -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<!-- goal:jar binds to phase:package -->
					<!-- goal:test-jar supposedly binds to phase:package, but seems to need
						this explicit binding. -->
					<executions>
						<execution>
							<id>package-test-jar</id>
							<phase>package</phase>
							<goals>
								<goal>test-jar</goal>
							</goals>
							<configuration>
								<archive>
									<manifest>
										<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
										<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
									</manifest>
								</archive>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<archive>
							<manifest>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Automatic-Module-Name>${jar-plugin.automaticModuleName}</Automatic-Module-Name>
								<Implementation-Vendor-Id>org.apache.isis</Implementation-Vendor-Id>
								<Implementation-Vendor>Apache Isisâ„¢ Project</Implementation-Vendor>
								<Bundle-SymbolicName>${jar-plugin.automaticModuleName}</Bundle-SymbolicName>
								<SCM-Revision>${git.commit.id.abbrev}</SCM-Revision>
								<!-- required for DN plugin.xml loading -->
								<Bundle-SymbolicName>${jar-plugin.automaticModuleName}</Bundle-SymbolicName>
								<!-- no requirement as of yet. <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
									<Bundle-Name>${jar-plugin.automaticModuleName}</Bundle-Name> <Bundle-Version>2.0.0-SNAPSHOT</Bundle-Version>
									<Bundle-Vendor>Apache Isisâ„¢ Project</Bundle-Vendor> -->
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>


				<!-- Packaging: WAR -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin}</version>
					<configuration>
						<warSourceExcludes>
							WEB-INF/lib/*.jar
						</warSourceExcludes>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathPrefix>lib/</classpathPrefix>
							</manifest>
						</archive>
					</configuration>
					<!-- goal:war binds to phase:package -->
				</plugin>


				<!-- release (is also configured in descendant modules) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
					<configuration>
						<!-- overriddes the default ('clean verify') as workaround -->
						<preparationGoals>clean install</preparationGoals>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<localCheckout>true</localCheckout>
						<pushChanges>false</pushChanges>
						<waitBeforeTagging>1</waitBeforeTagging>
					</configuration>
					<!-- goal:clean (for aggregator modules) has no bindings; cleans up
						release.properties and any backup POM files -->
					<!-- goal:prepare (for aggregator modules) has no bindings; prepares
						for release in SCM (modifying x.x-SNAPSHOT to x.x) -->
					<!-- goal:update-versions (for aggregator modules) has no bindings;
						updates versions eg to SNAPSHOT -->
					<!-- etc; none of the goals has a binding. -->
				</plugin>


				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<configuration>
						<rules>
							<requireMavenVersion>
								<version>[3.6.0,)</version>
							</requireMavenVersion>
							<requireJavaVersion>
								<version>[11,)</version>
							</requireJavaVersion>
							<!-- seemingly not compatible with use of 2.0.0-SNAPSHOT placeholders
								<requirePluginVersions> <message>All plugin versions must be defined!</message>
								<banLatest>true</banLatest> <banRelease>true</banRelease> </requirePluginVersions> -->
							<DependencyConvergence />
						</rules>
					</configuration>
					<!-- goal:enforce supposedly binds to phase:validate, but explicit binding
						seems to be required -->
					<executions>
						<execution>
							<id>validate-enforce</id>
							<phase>validate</phase>
							<goals>
								<goal>enforce</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>yuicompressor-maven-plugin</artifactId>
					<version>1.5.1</version>
					<configuration>
						<statistics>true</statistics>
						<jswarn>false</jswarn>
						<suffix>.min</suffix>
						<excludes>
							<!-- -->
							<exclude>**/jquery.isis.wicket.viewer.js</exclude>
							<!-- select 2 -->
							<exclude>**/i18n/*.js</exclude>
							<exclude>**/select2*.js</exclude>
							<!-- datetime picker -->
							<exclude>**/moment-with-locales.js</exclude>
							<exclude>**/moment-with-locales.min.js</exclude>
							<exclude>**/tempusdominus-bootstrap-4.js</exclude>
							<exclude>**/tempusdominus-bootstrap-4.min.js</exclude>
							<!-- boostrap growl -->
							<exclude>**/bootstrap-growl.js</exclude>
							<exclude>**/bootstrap-growl.min.js</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>compress</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>


		<!-- build plugins; apply to all inheriting modules. Note that some plugins
			also come from the "super-POM" for the default bindings. For example, in
			the 'default' lifecycle, the resources, compiler, surefire, jar, install
			and deploy plugins are automatically included because they provide the default
			bindings. For the 'site' lifecycle, the site plugin is automatically included. -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

			<!-- run using: mvn org.apache.rat:apache-rat-plugin:check -->
			<plugin>
				<groupId>org.apache.rat</groupId>
				<artifactId>apache-rat-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<!-- overrides the default ('clean verify') -->
					<preparationGoals>clean install</preparationGoals>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<dependencyManagement>

		<dependencies>

			<!-- CHILD MODULES -->
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-jdk-supplemental</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.commons</groupId>
				<artifactId>isis-commons</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-internaltestsupport</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-applib</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-config</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-schema</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-interaction</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-metamodel</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-runtime</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-runtimeservices</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-transaction</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-webapp</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-common</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-restfulobjects-applib</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-restfulobjects-rendering</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-restfulobjects-viewer</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-restfulobjects-testing</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-security</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.security</groupId>
				<artifactId>isis-security-bypass</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.security</groupId>
				<artifactId>isis-security-keycloak</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.security</groupId>
				<artifactId>isis-security-shiro</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.security</groupId>
				<artifactId>isis-security-spring</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-core-codegen-bytebuddy</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jdo-applib</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jdo-provider</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jdo-integration</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jdo-metamodel</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jdo-datanucleus</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jdo-spring</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jpa-applib</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jpa-metamodel</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jpa-integration</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.persistence</groupId>
				<artifactId>isis-persistence-jpa-eclipselink</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-restfulobjects-jaxrsresteasy4</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-wicket-model</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-wicket-ui</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.viewer</groupId>
				<artifactId>isis-viewer-wicket-viewer</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.mavendeps</groupId>
				<artifactId>isis-mavendeps-unittests</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.mavendeps</groupId>
				<artifactId>isis-mavendeps-integtests</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.mavendeps</groupId>
				<artifactId>isis-mavendeps-webapp</artifactId>
				<version>2.0.0-SNAPSHOT</version>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>apache-release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-toolchains-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<goals>
									<goal>toolchain</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<toolchains>
								<jdk>
									<version>11</version>
									<vendor>openjdk</vendor>
								</jdk>
							</toolchains>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>jdk11</id>
			<activation>
				<jdk>[11,)</jdk>
			</activation>

			<build>
				<plugins>
					<!-- Compile -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<showDeprecation>true</showDeprecation>
							<showWarnings>true</showWarnings>
							<!-- Java compliance level, to be overridden with option maven.compiler.release -->
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.jvnet.jaxb2.maven2</groupId>
						<artifactId>maven-jaxb2-plugin</artifactId>
						<version>0.14.0</version>
						<configuration>
							<removeOldOutput>true</removeOldOutput>
							<episode>true</episode>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>owasp</id>
			<activation>
				<property>
					<name>owasp</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.owasp</groupId>
						<artifactId>dependency-check-maven</artifactId>
						<version>6.5.1</version>
						<executions>
							<execution>
								<id>owasp-aggregate</id>
								<goals>
									<goal>aggregate</goal>
								</goals>
								<configuration>
									<skipProvidedScope>true</skipProvidedScope>
									<skipRuntimeScope>true</skipRuntimeScope>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>jdeps</id>
			<activation>
				<property>
					<name>jdeps</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jdeps-plugin</artifactId>
						<version>3.1.2</version>
						<executions>
							<execution>
								<id>jdeps-jdkinternals</id>
								<goals>
									<goal>jdkinternals</goal>
									<goal>test-jdkinternals</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>src</id>
			<activation>
				<property>
					<name>!skip.src</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>git</id>
			<activation>
				<property>
					<name>git</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- as per https://stackoverflow.com/a/28860520/56880 allows -Dgpg.passphrase=
				to be used rather than gpg.useagent inherited from parent. Note that this
				requires gpg v2.1+ -->
			<id>gpg</id>
			<activation>
				<property>
					<name>gpg.passphrase</name>
				</property>
			</activation>
			<properties>
				<gpg.useagent>false</gpg.useagent>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-release-artifacts</id>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<gpgArguments>
										<arg>--pinentry-mode</arg>
										<arg>loopback</arg>
									</gpgArguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>datanucleusenhance</id>
			<activation>
				<property>
					<name>isis-app-starter-datanucleusenhance</name>
					<value>true</value>
				</property>
				<!-- <file> <exists>${basedir}/logging-dn-enhance.properties</exists>
					</file> -->
			</activation>
			<properties>
				<datanucleus-maven-plugin.log4jConfiguration>${basedir}/logging-dn-enhance.properties</datanucleus-maven-plugin.log4jConfiguration>
				<datanucleus-maven-plugin.verbose>true</datanucleus-maven-plugin.verbose>
				<datanucleus-maven-plugin.fork>false</datanucleus-maven-plugin.fork>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-maven-plugin</artifactId>
						<version>${datanucleus-maven-plugin.version}</version>
						<configuration>
							<fork>${datanucleus-maven-plugin.fork}</fork>
							<log4jConfiguration>${datanucleus-maven-plugin.log4jConfiguration}</log4jConfiguration>
							<verbose>${datanucleus-maven-plugin.verbose}</verbose>
						</configuration>
						<executions>
							<execution>
								<id>process-classes</id>
								<phase>process-classes</phase>
								<goals>
									<goal>enhance</goal>
								</goals>
							</execution>
							<execution>
								<id>process-test-classes</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>test-enhance</goal>
								</goals>
								<configuration>
									<metadataDirectory>${project.build.testOutputDirectory}</metadataDirectory>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.datanucleus</groupId>
								<artifactId>datanucleus-core</artifactId>
								<version>${datanucleus-core.version}</version>
							</dependency>
							<dependency>
								<groupId>org.datanucleus</groupId>
								<artifactId>datanucleus-api-jdo</artifactId>
								<version>${datanucleus-api-jdo.version}</version>
							</dependency>
							<dependency>
								<groupId>org.datanucleus</groupId>
								<artifactId>datanucleus-jodatime</artifactId>
								<version>${datanucleus-jodatime.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<modules>

		<module>../supplemental-model</module>

		<module>jdk-supplemental</module>

		<module>../commons</module>

		<module>../api/schema</module>
		<module>../api/applib</module>

		<module>codegen-bytebuddy</module>
		<module>config</module>
		<module>interaction</module>
		<module>internaltestsupport</module>
		<module>metamodel</module>
		<module>runtime</module>
		<module>runtimeservices</module>
		<module>transaction</module>
		<module>webapp</module>

		<module>security</module>
		<module>../security/bypass</module>
		<module>../security/keycloak</module>
		<module>../security/shiro</module>
		<module>../security/spring</module>

		<module>../viewers/common</module>
		<module>../viewers/restfulobjects</module>
		<module>../viewers/wicket</module>

		<module>../persistence/jdo</module>
		<module>../persistence/jpa</module>

	</modules>

</project>


