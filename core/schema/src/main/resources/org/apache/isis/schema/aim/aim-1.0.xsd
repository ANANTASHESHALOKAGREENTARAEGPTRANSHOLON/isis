<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<xs:schema targetNamespace="http://isis.apache.org/schema/aim"
           elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://isis.apache.org/schema/aim"
           xmlns:common="http://isis.apache.org/schema/common">

    <xs:import namespace="http://isis.apache.org/schema/common" schemaLocation="../common/common-1.0.xsd"/>

    <xs:element name="actionInvocationMementoDto" type="actionInvocationMementoType">
        <xs:annotation>
            <xs:documentation>
                Represents v1.1 of this schema.  Changes since v1.0 are the 'majorVersion' and 'minorVersion', the 'mixedIn' element, the 'returned' element.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:complexType name="actionInvocationMementoType">
        <xs:sequence>
            <xs:element name="majorVersion" type="xs:string" minOccurs="0" maxOccurs="1" default="1">
                <xs:annotation>
                    <xs:documentation>
                        Introduced in v1.1.  The major version of the schema that an XML instance was created using.  This element is optional for backward compatibility, but will be populated for any 1.1+ instances of this schema.  If missing, assume '0'.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="minorVersion" type="xs:string" minOccurs="0" maxOccurs="1" default="1">
                <xs:annotation>
                    <xs:documentation>
                        Introduced in v1.1.  The minor version of the schema that an XML instance was created using.  This element is optional for backward compatibility, but will be populated for any 1.1+ instances of this schema.  If missing, assume '0'.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="metadata">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="transactionId" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Transaction id that this action was invoked.  Can be used to locate the corresponding Command object (which may have been persisted).  However, there could be many such actions (eg by virtue of WrapperFactory); the 'sequence' is used to provide a unique id for each action invocation.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="sequence" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>
                                    The combination of ['transactionId', 'sequence'] is guaranteed to be unique.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="timestamp" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>
                                    The point in time that this action was invoked.  See also 'timestampComplete'.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="timestampComplete" type="xs:dateTime" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                                <xs:documentation>
                                    Introduced in 1.1.  The point in time that this action completed.  The duration that the action took is the difference between 'timestamp' and 'timestampComplete'.  This element is optional for backward compatibility, but will be populated for any 1.1 instances of this schema.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="target" type="common:oidDto">
                            <xs:annotation>
                                <xs:documentation>
                                    For regular actions, represents the entity or view model upon which the action is invoked.  For mixin actions, is the mixin object itself; use the 'mixedIn' element (in the payload) to obtain the entity or view model being contributed to (is the constructor arg to the mixin).  For contributed actions, is the domain service (the contributee object will be one of the action arguments within the payload).s
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="targetClass" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    User-friendly representation of the target's class.  For the formal target' type, use the 'target' element (an oidDto)
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="targetAction" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    User-friendly representation of the action being invoked.  For the formal action identifier, use the 'actionIdentifier' element.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="actionIdentifier" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Formal identifier of the action being invoked.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="user" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the user that invoked this action.  Note that this isn't necessarily the user that initiated the original command; the SudoService may be being used to temporarily switch the effective user.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="title" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    User-friendly title of the 'target' object, or of the 'mixin' object if populated.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="payload">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="mixedIn" type="common:oidDto" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                                <xs:documentation>
                                    Introduced in v1.1.  Populated only for mixin actions, the entity or view model being contributed to (is the constructor arg to the mixin).
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="parameters">
                            <xs:complexType>
                                <xs:sequence maxOccurs="unbounded">
                                    <xs:element name="param" type="paramDto"/>
                                </xs:sequence>
                                <xs:attribute name="num" use="required" type="xs:int"/>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="return" type="common:valueDto" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                                <xs:documentation>
                                    Deprecated in v1.1. Use the 'returned' element (which also provides the return type) instead.  For v1.1+ instances of this schema, either both 'return' and 'returned' will be populated, or neither.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="returned" type="returnDto" minOccurs="0" maxOccurs="1">
                            <xs:annotation>
                                <xs:documentation>
                                    Introduced in v1.1. replaces the deprecated 'return' element (which exposes the return value, but not the return type).  For v1.1+ instances of this schema, ither both 'return' and 'returned' will be populated, or neither.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="subActions" type="actionInvocationMementoType" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Introduced in v1.1.  Capture subactions (if-any) invoked from this action, for example using the WrapperFactory service.  These therefore define a graph/call-stack of actions.  Note that the subactions will redundantly also specify their majorVersion and minorVersion (the alternative would have required restructuring in such a way as to break backward compatibility).
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="paramDto">
        <xs:sequence>
            <xs:element name="value" type="common:valueDto"/>
        </xs:sequence>
        <xs:attribute name="parameterName" use="required" type="xs:string"/>
        <xs:attribute name="parameterType" use="required" type="common:valueType"/>
        <xs:attribute name="null" use="optional" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="returnDto">
        <xs:annotation>
            <xs:documentation>
                Introduced in v1.1; used as the xsd:type of the 'returned' element.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="value" type="common:valueDto"/>
        </xs:sequence>
        <xs:attribute name="returnType" use="required" type="common:valueType"/>
        <xs:attribute name="null" use="optional" type="xs:boolean"/>
    </xs:complexType>

</xs:schema>
